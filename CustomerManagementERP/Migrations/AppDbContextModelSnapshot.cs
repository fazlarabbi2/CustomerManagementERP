// <auto-generated />
using System;
using CustomerManagementERP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerManagementERP.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerManagementERP.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BuisenesStartDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Address = "123 Main St",
                            BuisenesStartDate = new DateTime(2015, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 1000m,
                            Name = "John Doe",
                            Phone = "123-456-7890"
                        },
                        new
                        {
                            CustomerId = 2,
                            Address = "456 Elm St",
                            BuisenesStartDate = new DateTime(2018, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 2000m,
                            Name = "Jane Smith",
                            Phone = "987-654-3210"
                        },
                        new
                        {
                            CustomerId = 3,
                            Address = "789 Oak St",
                            BuisenesStartDate = new DateTime(2014, 12, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreditLimit = 1500m,
                            Name = "Mike Johnson",
                            Phone = "456-123-7890"
                        });
                });

            modelBuilder.Entity("CustomerManagementERP.Models.CustomerDeliveryAddress", b =>
                {
                    b.Property<int>("CustomerDeliveryAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerDeliveryAddressId"));

                    b.Property<string>("ContactPerson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerDeliveryAddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("deliveryAddresses");

                    b.HasData(
                        new
                        {
                            CustomerDeliveryAddressId = 1,
                            ContactPerson = "John Doe",
                            ContactPhone = "123-456-7890",
                            CustomerId = 1,
                            DeliveryAddress = "123 Main St - Apt 1"
                        },
                        new
                        {
                            CustomerDeliveryAddressId = 2,
                            ContactPerson = "Jane Smith",
                            ContactPhone = "987-654-3210",
                            CustomerId = 2,
                            DeliveryAddress = "456 Elm St - Office"
                        },
                        new
                        {
                            CustomerDeliveryAddressId = 3,
                            ContactPerson = "Mike Johnson",
                            ContactPhone = "456-123-7890",
                            CustomerId = 3,
                            DeliveryAddress = "789 Oak St - Suite 300"
                        });
                });

            modelBuilder.Entity("CustomerManagementERP.Models.CustomerDeliveryAddress", b =>
                {
                    b.HasOne("CustomerManagementERP.Models.Customer", "Customer")
                        .WithMany("DeliveryAddresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerManagementERP.Models.Customer", b =>
                {
                    b.Navigation("DeliveryAddresses");
                });
#pragma warning restore 612, 618
        }
    }
}
